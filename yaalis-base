#!/bin/bash

# Meant to be run in a LiveCD
# Only meant for GPT/UEFI systems

MNT=/mnt

arch_chroot() {
  arch-chroot "$MNT" /bin/bash -c "${1}"
}

if [[ $EUID != 0 ]]; then
  echo "only root should run this script"
  exit 1
fi

# disk stuff
lsblk
echo "which drive to gdisk? (/dev/sd*)"
read DRIVE
gdisk $DRIVE

#mount root
echo "enter root drive (/dev/sd*#): "
read ROOT_DRIVE
mkfs.ext4 $ROOT_DRIVE
mount $ROOT_DRIVE "$MNT"

# efi code = ef00
# efi partition size = 512M
# efi mount to /boot

# boot drive is optional (from preexisting installs)
echo "enter boot drive (/dev/sd*#) (or 'no'): "
read BOOT_DRIVE
if [[ "$BOOT_DRIVE" == "no" ]]; then
  echo "skipping boot drive creation"
else
  mkfs.vfat -F32 $BOOT_DRIVE
  mount $BOOT_DRIVE "$MNT"/boot
fi

# install base
# pacstrap "$MNT" base base-devel gummiboot git iw wpa_supplicant wpa_actiond dialog zsh xterm
pacstrap "$MNT" base base-devel gummiboot git zsh xterm

# genfstab
genfstab -p "$MNT" >> "$MNT"/etc/fstab

# mount
# arch-chroot "$MNT"

# symlink from /usr/share/zoneinfo/* to /etc/localtime
ln -s "$MNT"/usr/share/zoneinfo/America/Indianapolis "$MNT"/etc/localtime

# locale stuff
echo "en_US.UTF-8 UTF-8" >> "$MNT"/etc/locale.gen
arch_chroot "locale-gen"

# create locale.conf
echo LANG="en_US.UTF-8" > "$MNT"/etc/locale.conf
echo LC_COLLATE="C" >> "$MNT"/etc/locale.conf
echo LC_TIME="en_US.UTF-8" >> "$MNT"/etc/locale.conf

# set hostname
echo "enter hostname: "
read HOSTNAME
echo $HOSTNAME > "$MNT"/etc/hostname

# edit mkinitcpio (add ahci sd_mod ext4 to MODULES, systemd fsck for HOOKS)
if [[ "$BOOT_DRIVE" == "no" ]]; then
  echo "enter boot drive (/dev/sd*#) (t): "
  read BOOT_DRIVE
  mount $BOOT_DRIVE "$MNT"/boot
fi
vi "$MNT"/etc/mkinitcpio.conf
arch_chroot "mkinitcpio -p linux"

# edit settings (add discard for ssd)
vi "$MNT"/etc/fstab

# set bootloader
arch_chroot "gummiboot install"

# it will probably fail to create the entry
if [[ "$(ls -A "$target")" ]]; then
  echo "looks like entry was created"
else
  touch "$MNT"/boot/loader/entries/arch.conf
  echo title   Arch Linux >> "$MNT"/boot/loader/entries/arch.conf
  echo linux   /vmlinuz-linux >> "$MNT"/boot/loader/entries/arch.conf
  echo initrd  /initramfs-linux.img >> "$MNT"/boot/loader/entries/arch.conf
  echo options root=$ROOT_DRIVE rw quiet >> "$MNT"/boot/loader/entries/arch.conf
fi

# set root passwd
arch_chroot "passwd"

# unmount and finish!
umount "$MNT/boot" "$MNT"
echo "You're done! reboot into disk. (systemctl reboot)"
